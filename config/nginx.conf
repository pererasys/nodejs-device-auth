error_log  /var/logs/nginx/error.log;
pid        /var/run/nginx.pid;

worker_processes auto;
worker_rlimit_nofile 8192;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    client_max_body_size 10M;
    include /etc/nginx/mime.types;

    upstream api {
        server api:4000;
    }
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $remote_addr $proxy_forwarded_elem {
        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$          "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default             "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        ""      "$proxy_forwarded_elem";
        default "$http_forwarded, $proxy_forwarded_elem";
    }

    proxy_cache_path /data/nginx/cache levels=1:2   keys_zone=STATIC:10m
    inactive=24h max_size=1g;

    server {
        listen 80;
        server_name 127.0.0.1;

        gzip on;
        gzip_types application/json application/javascript image/* text/css;
        gzip_proxied no-cache no-store private expired auth;
        gzip_min_length 1000;

        error_log /var/logs/nginx/error.log warn;

        location /api/ {
            proxy_pass http://api/;
            proxy_set_header       Host $host;
            proxy_buffering       on;
            proxy_cache           STATIC;
            proxy_cache_valid      200 1d;
            proxy_cache_use_stale  error timeout invalid_header updating
                http_500 http_502 http_503 http_504;

            proxy_set_header Forwarded $proxy_add_forwarded;
        }
    }
}